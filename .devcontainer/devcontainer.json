// For format details, see https://aka.ms/devcontainer.json.
{
	"name": "lrbot-discord-dev",
	
	"build": {
		// Use the dev container Dockerfile, based on python:3.11-bookworm
		"dockerfile": "Dockerfile"
	},

	"features": {
		// Enable access to host's Docker Engine from within the dev container
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"version": "latest",
			"enableNonRootDocker": "true",
			"moby": "false"
		},
		// Install GitHub CLI
		"ghcr.io/devcontainers/features/github-cli:1": {
			"installDirectlyFromGitHubRelease": true,
			"version": "latest"
		},
		// Install tzdata and sudo
		"ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
			"packages": "tzdata,sudo"
		}
	},

	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	"mounts": [
		// Use the host's time settings
		"source=/etc/timezone,target=/etc/timezone,type=bind,readonly",
		"source=/etc/localtime,target=/etc/localtime,type=bind,readonly",
		// Mount the host's gpg-agent. Not ideal, but it's the only way I've gotten gpg to work for commit signing
		"source=${env:XDG_RUNTIME_DIR}/gnupg/S.gpg-agent,target=/home/vscode/.gnupg-host/S.gpg-agent,type=bind,readonly"
	],

	// Install Python dependencies and replace the gpg-agent VS Code brings in with a symlink to the mounted one that actually works
	"postCreateCommand": "pip install -r requirements.txt && ln -sf ~/.gnupg-host/S.gpg-agent ~/.gnupg/S.gpg-agent",

	"customizations": {
		"vscode": {
			"settings": {
				// Default to bash instead of sh for terminals in VS Code
				"terminal.integrated.defaultProfile.linux": "bash",
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "bash"
					}
				}
			},
			// Useful VS Code extensions
			"extensions": [
				"ms-azuretools.vscode-docker",
				"GitHub.vscode-pull-request-github",
				"eamodio.gitlens",
				"ms-python.vscode-pylance",
				"wdhongtw.gpg-indicator"
			]
		}
	},

	// Use the vscode user (created in Dockerfile) instead of root
	"remoteUser": "vscode"
}
